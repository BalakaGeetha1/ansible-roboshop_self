- name: create ec2 and r53
  hosts: local
  connection: local
  vars:
    ami_id: ami-09c813fb71547fc4f
    sg_id: sg-0338b6c26e88f5d75
    zone_id: "Z09725051OXQ4HS6KAP4"
    domain_name: "gdaws86s.fun"
    instances:
    - mongodb
      # - redis
      # - mysql
 
  tasks:
    - name: Create EC2 instance
      amazon.aws.ec2_instance:
        name: "{{ item }}"
        instance_type: t3.micro
        security_group: "{{ sg_id }}"
        image_id: "{{ ami_id }}"
        tags:
          Name: "{{ item }}"
      loop: "{{ instances }}"
      register: ec2_output

    # - name: Print the EC2 output
    #   ansible.builtin.debug:
    #     msg: "{{ec2_output}}"
        #var: ec2_output

    # - name: print public_ip
    #   ansible.builtin.debug: 
    #     msg: "{{item.instances[0].public_ip_address}}"
    #   loop: "{{ec2_output.results}}"
    
    # - name: print private_ip
    #   ansible.builtin.debug: 
    #     msg: "{{item.instances[0].private_ip_address}}"
    #   loop: "{{ec2_output.results}}"

    - name: Create route53 record
      amazon.aws.route53:
        state: present
        zone: "{{ domain_name }}"
        record: "{{ item.item }}.{{ domain_name }}" # mongodb.daws86s.fun
        type: A
        ttl: 1
        value: "{{ item.instances[0].private_ip_address }}"
        overwrite: true
      loop: "{{ ec2_output.results }}"

  # we are creating one record with public only for frontend
    - name: create route53 record for frontend
      amazon.aws.route53:
        state: present
        zone: "{{ domain_name }}"
        record: "{{ domain_name }}" # daws86s.fun
        type: A
        ttl: 1
        value: "{{ item.instances[0].public_ip_address }}"
        overwrite: true
        when: item.item == "frontend"
      loop: "{{ ec2_output.results }}"
